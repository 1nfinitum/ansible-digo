---
# LEMP server provisioning for DigitalOcean.
#
# @author 1nfinitum (Mykhaylo Kolesnik) (2017).

---
- hosts: localhost
  connection: local
  gather_facts: false
  vars_files:
    - vars/safe.yml
  vars_prompt:
    - name: "server_status"
      prompt: "Should server be 'present' or 'absent'?"
      default: "present"
      private: no

  tasks:
    - name: Create new Droplet.
      digital_ocean:
        api_token: "{{ api_token }}"
        state: "{{ server_status }}"
        command: droplet
        name: ansible-do
        private_networking: yes
        image_id: ubuntu-16-04-x32
        size_id: 512mb
        region_id: fra1
        ssh_key_ids: 6743524
        unique_name: yes
      register: do

    - name: Check if machine was already created to choose the right user for provisioning.
      set_fact: provisioning_user=deploy ansible_become=true python=/usr/bin/python
      when: do.changed == false

    - name: Add new host to our inventory.
      add_host:
        name: "{{ do.droplet.ip_address }}"
        groups: do
        ansible_python_interpreter: "{{ python | default('/usr/bin/python3') }}"
        ansible_user: "{{ provisioning_user | default('root') }}"
        ansible_become: "{{ ansible_become | default('') }}"
        ansible_become_pass: "deploy"
        user_pass: "{{ user_pass }}"
      when: do.droplet is defined
      changed_when: false

- hosts: do
  gather_facts: false

  vars_files:
    - vars/main.yml

  pre_tasks:

      - name: Getting host machine's IP.
        uri: 
          url: "http://ipecho.net/plain"
          return_content: yes
        register: host_ip

      - name: Setting MySQL allowed host ip.
        set_fact: mysql_ip="{{ host_ip.content }}"

      - name: Wait for port 22 to become available.
        local_action: "wait_for port=22 host={{ inventory_hostname }}"
        when: ansible_user == 'root'

      - name: Gathering facts.
        setup:

      - name: Add 'deploy' group
        group: 
          name: deploy
          state: present

      - name: Add user 'deploy'
        user: 
            name: deploy
            state: present
            createhome: yes
            shell: /bin/bash
            group: deploy
            password: "{{ user_pass }}"

      - name: Add ssh-authentication key for deploy
        authorized_key: 
            key: "{{ lookup('file', '~/.ssh/id_rsa.pub') }}"
            user: deploy
            state: present

  roles:
    - geerlingguy.security
    - geerlingguy.firewall
    - geerlingguy.ntp
    - role: geerlingguy.mysql
      ansible_python_interpreter: "/usr/bin/python"
    - geerlingguy.nginx
    - geerlingguy.php
    - geerlingguy.composer
