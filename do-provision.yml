# LEMP server provisioning for DigitalOcean.
#
# @author tenequm (Mykhaylo Kolesnik) (2017).
---
- hosts: localhost
  connection: local
  gather_facts: false
  vars_files:
    - vars/defaults.yml
    - vars/vars.yml
  vars_prompt:
    - name: "server_status"
      prompt: "Should server be 'present' or 'absent'?"
      default: "present"
      private: no

  tasks:
    - name: Adding SSH key for authentication.
      digital_ocean:
        command: ssh
        api_token: "{{ api_token | default('') }}"
        state: present
        name: "{{ droplet_name }}"
        ssh_pub_key: "{{ lookup('file', '{{ public_ssh_key_root }}') }}"
      register: ssh_key

    - name: Creating/deleting droplet.
      digital_ocean:
        api_token: "{{ api_token | default('') }}"
        state: "{{ server_status }}"
        command: droplet
        name: "{{ droplet_name }}"
        private_networking: yes
        image_id: ubuntu-16-04-x64
        size_id: 512mb
        region_id: fra1
        ssh_key_ids: "{{ ssh_key.ssh_key.id }}"
        unique_name: yes
      register: do

    - name: Check if machine was already created to choose the right user for provisioning.
      set_fact: provisioning_user="{{ user_name }}" ansible_become=true python=/usr/bin/python
      when: do.changed == false

    - wait_for:
        port: 22
        host: "{{ do.droplet.ip_address }}"
      when: do.droplet is defined and server_status != "absent" and do.changed == true

    - name: Adding DNS record in DigitalOcean.
      digital_ocean_domain:
        api_token: "{{ api_token | default('') }}"
        name: "{{ domain_name }}"
        state: "{{ server_status }}"
        ip: "{{ do.droplet.ip_address }}"
      when: domain_name is defined and do.changed == true and server_status != "absent"

    - name: Deleting DNS record from DigitalOcean.
      digital_ocean_domain:
        api_token: "{{ api_token | default('') }}"
        name: "{{ domain_name }}"
        state: "{{ server_status }}"
      when: domain_name is defined and server_status == "absent"

    - name: Add new host to our inventory.
      add_host:
        name: "{{ do.droplet.ip_address }}"
        groups: do
        ansible_python_interpreter: "{{ python | default('/usr/bin/python3') }}"
        ansible_user: "{{ provisioning_user | default('root') }}"
        # ansible_become: "{{ ansible_become | default('') }}"
        ansible_become_pass: "jz"
        ansible_ssh_private_key_file: "{{ private_ssh_key_root }}"
        ansible_port: "{{ security_ssh_port|d('22') }}"
      when: do.droplet is defined and server_status != "absent"
      changed_when: false

- hosts: do
  gather_facts: false
  become: yes
  vars_files:
    - vars/defaults.yml
    - vars/vars.yml

  roles:
    - tenequm.users
    - tenequm.security
    - tenequm.nginx
    - tenequm.php
    - role: tenequm.mysql
      ansible_python_interpreter: "/usr/bin/python"
